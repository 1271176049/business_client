<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.0.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd">
	<context:component-scan base-package="com.sdp.edu.*"
		use-default-filters="false">
		<context:include-filter type="annotation"
			expression="org.springframework.stereotype.Service" />
		<context:exclude-filter type="annotation"
			expression="org.springframework.stereotype.Controller" />
	</context:component-scan>
	<!-- 引用外部属性文件 -->
	<context:property-placeholder
		location="classpath:db.properties,classpath:ws.properties" />
	<!-- 配置数据源 -->
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource">
		<property name="url" value="${jdbc.url}"></property>
		<property name="driverClassName" value="${jdbc.driver}"></property>
		<property name="username" value="${jdbc.user}"></property>
		<property name="password" value="${jdbc.password}"></property>
	</bean>
	<!-- 配置JaxWsFactoryBean实现FactoryBean接口，让它实现控制反转 -->
	<bean class="com.sdp.edu.utils.MyWsFactoryBean">
		<property name="url" value="${soap.userlogin}"></property>
		<property name="t" value="com.sdp.edu.server.UserLoginServer"></property>
	</bean>
	<!-- 配置sqlSessionFactoryBean -->
	<bean id="sqlSessionFactoryBean" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource"></property>
		<property name="configLocation" value="classpath:mybatis-config.xml"></property>
	</bean>
	<!-- 配置 mybatis扫描的包 -->
	<bean id="mapperScannerConfigurer" class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.sdp.edu.mapper"></property>
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactoryBean"></property>
	</bean>
	<!-- 配置事务管理器 -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<!-- 注入数据源 -->
		<property name="dataSource" ref="dataSource"></property>
	</bean>
	<!-- 配置事务的通知：传播属性、隔离级别、回滚异常... -->
	<tx:advice id="advice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="*" propagation="REQUIRED" isolation="REPEATABLE_READ"
				rollback-for="java.lang.Exception" />
		</tx:attributes>
	</tx:advice>
	<!-- 配置事务的切面类的切入点 -->
	<aop:config>
		<aop:pointcut
			expression="execution (* com.sdp.edu.service.imp.OrderServiceImp.*(..))"
			id="pointcut1" />
		<!-- 将事务的切入点表达式与事务的通知属性联系到一起 -->
		<aop:advisor advice-ref="advice" pointcut-ref="pointcut1" />
	</aop:config>
	<!-- 支持注解事务 -->
	<tx:annotation-driven transaction-manager="transactionManager" />
</beans>
